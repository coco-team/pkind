(* auto-generated by gt *)

open Lsimplify_syntax;;
open Ast;;

let rec dummy () = ()
and pp_body = function
   |Body (_ , equation_list2 , body_end4) ->  print_string "\nlet";print_string
   "\n"; pp_equation_list equation_list2;print_string " "; print_string "tel";print_string " "; pp_body_end body_end4; ()
and pp_body_end = function
   |NoBodyEnd (_) ->   ()
   |BodyEnd (_) ->  print_string ";"; ()
and pp_clocked_var_decl = function
   |ClockedVarDecl(_ , var_decl1) ->  pp_var_decl var_decl1; ()
   |WhenClockedVarDecl(_ , var_decl_list2 , str5) ->  print_string
   "(";print_string " "; pp_var_decl_list var_decl_list2;print_string " ";
   print_string ")";print_string " "; print_string "when";print_string " ";
   print_string (get_sym_name str5); ()
and pp_const_decl = function
   |ConstDecl (_ , constdecl_const_decl_one_const_decl72) ->  print_string "const";print_string " "; pp_constdecl_const_decl_one_const_decl7 constdecl_const_decl_one_const_decl72; ()
and pp_equation = function
   |AssertEquation(_ , exp2) ->  print_string "assert";print_string " "; pp_exp exp2; ()
   |AssignEquation(_ , left_part1 , exp3) ->  pp_left_part left_part1;print_string " "; print_string "=";print_string " "; pp_exp exp3; ()
   |KindEquation(_ , str2 , equation2_equation_exp113) ->  print_string
   "--!";print_string (get_sym_name str2);print_string " : "; pp_equation2_equation_exp11 equation2_equation_exp113; ()
and pp_equation_list = function
   |EquationList (_ , equationlist_equation_list_equation131) ->  pp_equationlist_equation_list_equation13 equationlist_equation_list_equation131; ()
and pp_exp = function
   |IntExp (_ , str1) ->  print_int str1; ()
   |RealExp (_ , str1) ->  Printf.printf "%f" str1; ()
   |IdExp (_ , str1) ->  print_string (get_sym_name str1); ()
   |NodeExp (_ , str1 , exp_list3) ->  print_string (get_sym_name
   str1);print_string " "; print_string "(";print_string " "; pp_exp_list
   exp_list3;print_string " "; print_string ")"; ()
   |ListExp(_ , exp_list2) ->  print_string "(";print_string " "; pp_exp_list exp_list2;print_string " "; print_string ")"; ()
   |TupleExp(_ , exp_list2) ->  print_string "[";print_string " "; pp_exp_list exp_list2;print_string " "; print_string "]"; ()
   |NotExp (_ , exp2) ->  print_string "not";print_string " "; pp_exp exp2; ()
   |NegExp (_ , exp2) ->  print_string "-";print_string " "; pp_exp exp2; ()
   |PreExp (_ , exp2) ->  print_string "pre";print_string " "; pp_exp exp2; ()
   |CurrentExp (_ , exp2) ->  print_string "current";print_string " "; pp_exp exp2; ()
   |ArrowExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "->";print_string " "; pp_exp exp3; ()
   |WhenExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "when";print_string " "; pp_exp exp3; ()
   |OrExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "or";print_string " "; pp_exp exp3; ()
   |XorExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "xor";print_string " "; pp_exp exp3; ()
   |AndExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "and";print_string " "; pp_exp exp3; ()
   |ImpExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "=>";print_string " "; pp_exp exp3; ()
   |EqExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "=";print_string " "; pp_exp exp3; ()
   |DiamondExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "<>";print_string " "; pp_exp exp3; ()
   |LtExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "<";print_string " "; pp_exp exp3; ()
   |GtExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string ">";print_string " "; pp_exp exp3; ()
   |LteExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "<=";print_string " "; pp_exp exp3; ()
   |GteExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string ">=";print_string " "; pp_exp exp3; ()
   |PlusExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "+";print_string " "; pp_exp exp3; ()
   |MinusExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "-";print_string " "; pp_exp exp3; ()
   |StarExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "*";print_string " "; pp_exp exp3; ()
   |SlashExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "/";print_string " "; pp_exp exp3; ()
   |DivExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "div";print_string " "; pp_exp exp3; ()
   |ModExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "mod";print_string " "; pp_exp exp3; ()
   |ArrayExp (_ , exp1 , exp3) ->  print_string "{"; pp_exp exp1;print_string " "; print_string
   "^";print_string " "; pp_exp exp3; print_string "}"; ()
   |ConcatExp (_ , exp1 , exp3) ->  pp_exp exp1;print_string " "; print_string "|";print_string " "; pp_exp exp3; ()
   |SliceExp (_ , exp1 , exp3 , sel_sub4) ->  pp_exp exp1;print_string " "; print_string "[";print_string " "; pp_exp exp3;print_string " "; pp_sel_sub sel_sub4;print_string " "; print_string "]"; ()
   |IfExp (_ , exp2 , exp4 , exp6) ->  print_string "if";print_string " "; pp_exp exp2;print_string " "; print_string "then";print_string " "; pp_exp exp4;print_string " "; print_string "else";print_string " "; pp_exp exp6; ()
   |WithExp (_ , exp2 , exp4 , exp6) ->  print_string "with";print_string " "; pp_exp exp2;print_string " "; print_string "then";print_string " "; pp_exp exp4;print_string " "; print_string "else";print_string " "; pp_exp exp6; ()
   |PoundExp (_ , exp_list3) ->  print_string "#";print_string " "; print_string "(";print_string " "; pp_exp_list exp_list3;print_string " "; print_string ")"; ()
and pp_exp_list = function
   |ExpList (_ , exp1 , explist_exp_list_comma492) ->  pp_exp exp1;print_string " "; pp_explist_exp_list_comma49 explist_exp_list_comma492; ()
and pp_func_decl = function
   |FuncDecl (_ , str2 , var_decl4 , var_decl8) ->  print_string
   "function";print_string " "; print_string (Ast.get_sym_name
   str2);print_string " "; print_string "(";print_string " "; pp_var_decl_list
   var_decl4;print_string " "; print_string ")";print_string " "; print_string
   "\n   returns";print_string " "; print_string "(";print_string " ";
   pp_var_decl_list var_decl8;print_string " "; print_string ")"; ()
and pp_id_list = function
   |VarList (_ , str1 , varlist_id_list_comma522) ->  print_string (
   (get_sym_name str1));print_string " "; pp_varlist_id_list_comma52 varlist_id_list_comma522; ()
and pp_in_param = function
   |InParam(_ , clocked_var_decl1) ->  pp_clocked_var_decl clocked_var_decl1; ()
   |ConstInParam(_ , var_decl2) ->  print_string "const";print_string " "; pp_var_decl var_decl2; ()
and pp_in_param_list = function
   |InParamList (_ , in_param1 , inparamlist_in_param_list_semicolon562) ->  pp_in_param in_param1;print_string " "; pp_inparamlist_in_param_list_semicolon56 inparamlist_in_param_list_semicolon562; ()
and pp_include_list = function
   |IncludeList (_ , includelist_include_list_linclude581) ->  pp_includelist_include_list_linclude58 includelist_include_list_linclude581; ()
and pp_left_elem = function
   |IdLeftElem(_ , str1) ->  print_string ((get_sym_name str1)); ()
   |StructLeftElem(_ , struct_filter1) ->  pp_struct_filter struct_filter1; ()
   |SliceLeftElem(_ , tab_access1) ->  pp_tab_access tab_access1; ()
and pp_left_elem_list = function
   |LeftElemList (_ , left_elem1 , leftelemlist_left_elem_list_comma632) ->  pp_left_elem left_elem1;print_string " "; pp_leftelemlist_left_elem_list_comma63 leftelemlist_left_elem_list_comma632; ()
and pp_left_part = function
   |LeftPart(_ , left_elem_list1) ->  pp_left_elem_list left_elem_list1; ()
   |ParenLeftPart(_ , left_elem_list2) ->  print_string "(";print_string " "; pp_left_elem_list left_elem_list2;print_string " "; print_string ")"; ()
and pp_linclude = function
   |Include (_ , str2) ->  print_string "include";print_string " "; print_string str2; ()
and pp_local_decl = function
   |LocalDecl (_ , localdecl_local_decl_clocked_var_decl682) ->  print_string "var";print_string " "; pp_localdecl_local_decl_clocked_var_decl68 localdecl_local_decl_clocked_var_decl682; ()
and pp_ltype = function
   |IdType (_ , str1) ->  print_string (Ast.get_sym_name str1); ()
   |ArrayType (_ , ltype1 , exp3) ->  pp_ltype ltype1;print_string " "; print_string "^";print_string " "; pp_exp exp3; ()
   |StructType (_ , type_list2) ->  print_string "[";print_string " "; pp_type_list type_list2;print_string " "; print_string "]"; ()
and pp_ltype_list = function
   |LTypeList (_ , str1 , ltypelist_ltype_list_comma732) ->  print_string
   (get_sym_name str1);print_string " "; pp_ltypelist_ltype_list_comma73 ltypelist_ltype_list_comma732; ()
and pp_lus_file = function
   |LusFile (_ , lusfile_lus_file_one_decl751) ->  pp_lusfile_lus_file_one_decl75 lusfile_lus_file_one_decl751; ()
and pp_node_decl = function
   |NodeDecl (_ , str2 , in_param_list4 , clocked_var_decl_list8 ,
   nodedecl_node_decl_local_decl7511 , body12) ->  print_string
   "node";print_string " "; print_string (Ast.get_sym_name str2);print_string " "; print_string "(";print_string " "; pp_in_param_list
   in_param_list4;print_string " "; print_string ")";print_string " ";
   print_string "\n   returns";print_string " "; print_string "(";print_string " ";
   pp_in_param_list clocked_var_decl_list8;print_string " ";
   print_string ")";print_string " "; print_string ";";print_string "\n";
   pp_nodedecl_node_decl_local_decl77 nodedecl_node_decl_local_decl7511;print_string " "; pp_body body12; ()
and pp_one_const_decl = function
   |EqOneConstDecl(_ , str1 , exp3) ->  print_string ((get_sym_name str1));print_string " "; print_string "=";print_string " "; pp_exp exp3; ()
   |ListOneConstDecl(_ , id_list1 , str3) ->  pp_id_list id_list1;print_string " "; print_string ":";print_string " "; print_string (get_sym_name str3); ()
and pp_one_decl = function
   |ConstOneDecl(_ , const_decl1) ->  pp_const_decl const_decl1; ()
   |TypeOneDecl(_ , type_decl1) ->  pp_type_decl type_decl1; ()
   |FuncOneDecl(_ , func_decl1) ->  pp_func_decl func_decl1; ()
   |NodeOneDecl(_ , node_decl1) ->  pp_node_decl node_decl1; ()
and pp_one_type_decl = function
   |EqOneTypeDecl(_ , str1 , ltype3) ->  print_string (Ast.get_sym_name str1);print_string " "; print_string "=";print_string " "; pp_ltype ltype3; ()
   |ListOneTypeDecl(_ , ltype_list1) ->  pp_ltype_list ltype_list1; ()
and pp_program = function
   |Program (_ , include_list1 , lus_file2) ->  pp_include_list include_list1; pp_lus_file lus_file2; ()
and pp_sel_sub = function
   |SelSub (_ , selsub_sel_sub_dotdot881) ->  pp_selsub_sel_sub_dotdot88 selsub_sel_sub_dotdot881; ()
and pp_sel_subsub = function
   |SelSubSub (_ , selsubsub_sel_subsub_step901) ->  pp_selsubsub_sel_subsub_step90 selsubsub_sel_subsub_step901; ()
and pp_selector = function
   |Selector (_ , exp2 , sel_sub3) ->  print_string "[";print_string " "; pp_exp exp2;print_string " "; pp_sel_sub sel_sub3;print_string " "; print_string "]"; ()
and pp_struct_filter = function
   |StructFilter (_ , left_elem_list2) ->  print_string "[";print_string " "; pp_left_elem_list left_elem_list2;print_string " "; print_string "]"; ()
and pp_tab_access = function
   |TabAccess(_ , str1 , selector2) ->  print_string ((get_sym_name str1));print_string " "; pp_selector selector2; ()
   |MultiTabAccess(_ , tab_access1 , selector2) ->  pp_tab_access tab_access1;print_string " "; pp_selector selector2; ()
and pp_type_decl = function
   |TypeDecl (_ , typedecl_type_decl_one_type_decl962) ->  print_string "type";print_string " "; pp_typedecl_type_decl_one_type_decl96 typedecl_type_decl_one_type_decl962; ()
and pp_type_list = function
   |TypeList (_ , ltype1 , typelist_type_list_comma982) ->  pp_ltype ltype1;print_string " "; pp_typelist_type_list_comma98 typelist_type_list_comma982; ()
and pp_var_decl = function
   |VarDecl (_ , id_list1 , ltype3) ->  pp_id_list id_list1;print_string " "; print_string ":";print_string " "; pp_ltype ltype3; ()
and pp_var_decl_list = function
   |VarDeclList (_ , var_decl1 , vardecllist_var_decl_list_semicolon1012) ->  pp_var_decl var_decl1;print_string " "; pp_vardecllist_var_decl_list_semicolon101 vardecllist_var_decl_list_semicolon1012; ()
and pp_vardecllist_var_decl_list_semicolon101 = function
   |(_,[]) ->   ()
   | (d , (var_decl2)::vardecllist_var_decl_list_semicolon1013) ->  print_string ";";print_string " "; pp_var_decl var_decl2;print_string " "; pp_vardecllist_var_decl_list_semicolon101 (d,vardecllist_var_decl_list_semicolon1013); ()
and pp_typelist_type_list_comma98 = function
   |(_,[]) ->   ()
   | (d , (ltype2)::typelist_type_list_comma983) ->  print_string ",";print_string " "; pp_ltype ltype2;print_string " "; pp_typelist_type_list_comma98 (d,typelist_type_list_comma983); ()
and pp_typedecl_type_decl_one_type_decl96 = function
   |(_,[]) ->   ()
   | (d , (one_type_decl1)::typedecl_type_decl_one_type_decl963) ->  pp_one_type_decl one_type_decl1;print_string " "; print_string ";";print_string " "; pp_typedecl_type_decl_one_type_decl96 (d,typedecl_type_decl_one_type_decl963); ()
and pp_selsubsub_sel_subsub_step90 = function
   | (_ , Some(exp2)) ->  print_string "step";print_string " "; pp_exp exp2; ()
   |(_,None) ->   ()
and pp_selsub_sel_sub_dotdot88 = function
   | (_ , Some(exp2 , sel_subsub3)) ->  print_string "..";print_string " "; pp_exp exp2;print_string " "; pp_sel_subsub sel_subsub3; ()
   |(_,None) ->   ()
and pp_nodedecl_node_decl_local_decl77 = function
   | (_ , Some(local_decl1)) ->  pp_local_decl local_decl1; ()
   |(_,None) ->   ()
and pp_lusfile_lus_file_one_decl75 = function
   | (d,tl,cl,fl,nl) ->
      let r1 = List.fold_left (fun a x -> if a then print_string "\n\n"; pp_type_decl x; true) false tl in
      let r2 = List.fold_left (fun a x -> if a then print_string "\n\n"; pp_const_decl x; true) r1 cl in
      let r3 = List.fold_left (fun a x -> if a then print_string "\n\n"; pp_func_decl x; true) r2 fl in
      let _ = List.fold_left (fun a x -> if a then print_string "\n\n"; pp_node_decl x; true) r3 nl in
      ()
and pp_ltypelist_ltype_list_comma73 = function
   |(_,[]) ->   ()
   | (d , (str2)::ltypelist_ltype_list_comma733) ->  print_string
   ",";print_string " "; print_string (get_sym_name str2);print_string " "; pp_ltypelist_ltype_list_comma73 (d,ltypelist_ltype_list_comma733); ()
and pp_localdecl_local_decl_clocked_var_decl68 = function
   |(_,[]) ->   ()
   | (d , (clocked_var_decl1)::localdecl_local_decl_clocked_var_decl683) ->
         pp_clocked_var_decl clocked_var_decl1;print_string " "; print_string
         ";\n";print_string " "; pp_localdecl_local_decl_clocked_var_decl68 (d,localdecl_local_decl_clocked_var_decl683); ()
and pp_leftelemlist_left_elem_list_comma63 = function
   |(_,[]) ->   ()
   | (d , (left_elem2)::leftelemlist_left_elem_list_comma633) ->  print_string ",";print_string " "; pp_left_elem left_elem2;print_string " "; pp_leftelemlist_left_elem_list_comma63 (d,leftelemlist_left_elem_list_comma633); ()
and pp_includelist_include_list_linclude58 = function
   |(_,[]) ->   ()
   | (d , (linclude1)::includelist_include_list_linclude582) ->  pp_linclude linclude1;print_string " "; pp_includelist_include_list_linclude58 (d,includelist_include_list_linclude582); ()
and pp_inparamlist_in_param_list_semicolon56 = function
   |(_,[]) ->   ()
   | (d , (in_param2)::inparamlist_in_param_list_semicolon563) ->  print_string ";";print_string " "; pp_in_param in_param2;print_string " "; pp_inparamlist_in_param_list_semicolon56 (d,inparamlist_in_param_list_semicolon563); ()
and pp_varlist_id_list_comma52 = function
   |(_,[]) ->   ()
   | (d , (str2)::varlist_id_list_comma523) ->  print_string ",";print_string " "; print_string ( (get_sym_name str2));print_string " "; pp_varlist_id_list_comma52 (d,varlist_id_list_comma523); ()
and pp_explist_exp_list_comma49 = function
   |(_,[]) ->   ()
   | (d , (exp2)::explist_exp_list_comma493) ->  print_string ",";print_string " "; pp_exp exp2;print_string " "; pp_explist_exp_list_comma49 (d,explist_exp_list_comma493); ()
and pp_equationlist_equation_list_equation13 = function
   |(_,[]) ->   ()
   | (d , (equation1)::equationlist_equation_list_equation133) ->  pp_equation
   equation1; print_string ";";print_string "\n"; pp_equationlist_equation_list_equation13 (d,equationlist_equation_list_equation133); ()
and pp_equation2_equation_exp11 = function
   | (_ , Some(exp1)) ->  pp_exp exp1; ()
   |(_,None) ->   ()
and pp_constdecl_const_decl_one_const_decl7 = function
   |(_,[]) ->   ()
   | (d , (one_const_decl1)::constdecl_const_decl_one_const_decl73) ->  pp_one_const_decl one_const_decl1;print_string " "; print_string ";";print_string " "; pp_constdecl_const_decl_one_const_decl7 (d,constdecl_const_decl_one_const_decl73); ()
and pp_clockedvardecllist_clocked_var_decl_list_semicolon5 = function
   |(_,[]) ->   ()
   | (d ,
   (clocked_var_decl2)::clockedvardecllist_clocked_var_decl_list_semicolon53) ->
      print_string ";\n";print_string " "; pp_clocked_var_decl clocked_var_decl2;print_string " "; pp_clockedvardecllist_clocked_var_decl_list_semicolon5 (d,clockedvardecllist_clocked_var_decl_list_semicolon53); () ;;
let pp e = pp_program e;;
