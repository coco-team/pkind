(* auto-generated by gt *)

open Lsimplify_util;;

type dummy = Dummy 
and body = | Body of pd * equation_list * body_end
and body_end = | NoBodyEnd of pd
               | BodyEnd of pd
and clocked_var_decl = | ClockedVarDecl of pd * var_decl
                       | WhenClockedVarDecl of pd * var_decl_list * int
and const_decl = | ConstDecl of pd * constdecl_const_decl_one_const_decl7
and equation = | AssertEquation of pd * exp
               | AssignEquation of pd * left_part * exp
               | KindEquation of pd * int * equation2_equation_exp11
and equation_list = | EquationList of pd * equationlist_equation_list_equation13
and exp = | IntExp of pd * int
          | RealExp of pd * float
          | IdExp of pd * int
          | NodeExp of pd * int * exp_list
          | ListExp of pd * exp_list
          | TupleExp of pd * exp_list
          | NotExp of pd * exp
          | NegExp of pd * exp
          | PreExp of pd * exp
          | CurrentExp of pd * exp
          | ArrowExp of pd * exp * exp
          | WhenExp of pd * exp * exp
          | OrExp of pd * exp * exp
          | XorExp of pd * exp * exp
          | AndExp of pd * exp * exp
          | ImpExp of pd * exp * exp
          | EqExp of pd * exp * exp
          | DiamondExp of pd * exp * exp
          | LtExp of pd * exp * exp
          | GtExp of pd * exp * exp
          | LteExp of pd * exp * exp
          | GteExp of pd * exp * exp
          | PlusExp of pd * exp * exp
          | MinusExp of pd * exp * exp
          | StarExp of pd * exp * exp
          | SlashExp of pd * exp * exp
          | DivExp of pd * exp * exp
          | ModExp of pd * exp * exp
          | ArrayExp of pd * exp * exp
          | ConcatExp of pd * exp * exp
          | SliceExp of pd * exp * exp * sel_sub
          | IfExp of pd * exp * exp * exp
          | WithExp of pd * exp * exp * exp
          | PoundExp of pd * exp_list
and exp_list = | ExpList of pd * exp * explist_exp_list_comma49
and func_decl = | FuncDecl of pd * int * var_decl_list * var_decl_list
and id_list = | VarList of pd * int * varlist_id_list_comma52
and in_param = | InParam of pd * clocked_var_decl
               | ConstInParam of pd * var_decl
and in_param_list = | InParamList of pd * in_param * inparamlist_in_param_list_semicolon56
and include_list = | IncludeList of pd * includelist_include_list_linclude58
and left_elem = | IdLeftElem of pd * int
                | StructLeftElem of pd * struct_filter
                | SliceLeftElem of pd * tab_access
and left_elem_list = | LeftElemList of pd * left_elem * leftelemlist_left_elem_list_comma63
and left_part = | LeftPart of pd * left_elem_list
                | ParenLeftPart of pd * left_elem_list
and linclude = | Include of pd * string
and local_decl = | LocalDecl of pd * localdecl_local_decl_clocked_var_decl68
and ltype = | IdType of pd * int
            | ArrayType of pd * ltype * exp
            | StructType of pd * type_list
and ltype_list = | LTypeList of pd * int * ltypelist_ltype_list_comma73
and lus_file = | LusFile of pd * lusfile_lus_file_one_decl75
and node_decl = | NodeDecl of pd * int * in_param_list * in_param_list * nodedecl_node_decl_local_decl77 * body
and one_const_decl = | EqOneConstDecl of pd * int * exp
                     | ListOneConstDecl of pd * id_list * int
and one_decl = | ConstOneDecl of pd * const_decl
               | TypeOneDecl of pd * type_decl
               | FuncOneDecl of pd * func_decl
               | NodeOneDecl of pd * node_decl
and one_type_decl = | EqOneTypeDecl of pd * int * ltype
                    | ListOneTypeDecl of pd * ltype_list
and program = | Program of pd * include_list * lus_file
and sel_sub = | SelSub of pd * selsub_sel_sub_dotdot88
and sel_subsub = | SelSubSub of pd * selsubsub_sel_subsub_step90
and selector = | Selector of pd * exp * sel_sub
and struct_filter = | StructFilter of pd * left_elem_list
and tab_access = | TabAccess of pd * int * selector
                 | MultiTabAccess of pd * tab_access * selector
and type_decl = | TypeDecl of pd * typedecl_type_decl_one_type_decl96
and type_list = | TypeList of pd * ltype * typelist_type_list_comma98
and var_decl = | VarDecl of pd * id_list * ltype
and var_decl_list = | VarDeclList of pd * var_decl * vardecllist_var_decl_list_semicolon101

and vardecllist_var_decl_list_semicolon101 = pd * ( var_decl) list
and typelist_type_list_comma98 = pd * ( ltype) list
and typedecl_type_decl_one_type_decl96 = pd * ( one_type_decl) list
and selsubsub_sel_subsub_step90 = pd * ( exp) option
and selsub_sel_sub_dotdot88 = pd * ( exp * sel_subsub) option
and nodedecl_node_decl_local_decl77 = pd * ( local_decl) option
and lusfile_lus_file_one_decl75 = pd * (type_decl) list *
                                       (const_decl) list *
                                       (func_decl) list *
                                       (node_decl) list
and ltypelist_ltype_list_comma73 = pd * (int) list
and localdecl_local_decl_clocked_var_decl68 = pd * ( clocked_var_decl) list
and leftelemlist_left_elem_list_comma63 = pd * ( left_elem) list
and includelist_include_list_linclude58 = pd * ( linclude) list
and inparamlist_in_param_list_semicolon56 = pd * ( in_param) list
and varlist_id_list_comma52 = pd * (int) list
and explist_exp_list_comma49 = pd * ( exp) list
and equationlist_equation_list_equation13 = pd * ( equation) list
and equation2_equation_exp11 = pd * ( exp) option
and constdecl_const_decl_one_const_decl7 = pd * ( one_const_decl) list

(* pd stands for pos (position) and extradata *)
let rec dummy () = () 
and pd_body = function 
  | Body(d,_,_) -> d

and pd_body_end = function 
  | NoBodyEnd(d) -> d

  | BodyEnd(d) -> d

and pd_clocked_var_decl = function 
  | ClockedVarDecl(d,_) -> d

  | WhenClockedVarDecl(d,_,_) -> d

and pd_const_decl = function 
  | ConstDecl(d,_) -> d

and pd_equation = function 
  | AssertEquation(d,_) -> d

  | AssignEquation(d,_,_) -> d

  | KindEquation(d,_,_) -> d

and pd_equation_list = function 
  | EquationList(d,_) -> d

and pd_exp = function 
  | IntExp(d,_) -> d
  | RealExp(d,_) -> d
  | IdExp(d,_) -> d
  | NodeExp(d,_,_) -> d
  | ListExp(d,_) -> d
  | TupleExp(d,_) -> d
  | NotExp(d,_) -> d
  | NegExp(d,_) -> d
  | PreExp(d,_) -> d
  | CurrentExp(d,_) -> d
  | ArrowExp(d,_,_) -> d
  | WhenExp(d,_,_) -> d
  | OrExp(d,_,_) -> d
  | XorExp(d,_,_) -> d
  | AndExp(d,_,_) -> d
  | ImpExp(d,_,_) -> d
  | EqExp(d,_,_) -> d
  | DiamondExp(d,_,_) -> d
  | LtExp(d,_,_) -> d
  | GtExp(d,_,_) -> d
  | LteExp(d,_,_) -> d
  | GteExp(d,_,_) -> d
  | PlusExp(d,_,_) -> d
  | MinusExp(d,_,_) -> d
  | StarExp(d,_,_) -> d
  | SlashExp(d,_,_) -> d
  | DivExp(d,_,_) -> d
  | ModExp(d,_,_) -> d
  | ArrayExp(d,_,_) -> d
  | ConcatExp(d,_,_) -> d
  | SliceExp(d,_,_,_) -> d
  | IfExp(d,_,_,_) -> d
  | WithExp(d,_,_,_) -> d
  | PoundExp(d,_) -> d

and pd_exp_list = function 
  | ExpList(d,_,_) -> d

and pd_func_decl = function 
  | FuncDecl(d,_,_,_) -> d

and pd_id_list = function 
  | VarList(d,_,_) -> d

and pd_in_param = function 
  | InParam(d,_) -> d

  | ConstInParam(d,_) -> d

and pd_in_param_list = function 
  | InParamList(d,_,_) -> d

and pd_include_list = function 
  | IncludeList(d,_) -> d

and pd_left_elem = function 
  | IdLeftElem(d,_) -> d

  | StructLeftElem(d,_) -> d

  | SliceLeftElem(d,_) -> d

and pd_left_elem_list = function 
  | LeftElemList(d,_,_) -> d

and pd_left_part = function 
  | LeftPart(d,_) -> d

  | ParenLeftPart(d,_) -> d

and pd_linclude = function 
  | Include(d,_) -> d

and pd_local_decl = function 
  | LocalDecl(d,_) -> d

and pd_ltype = function 
  | IdType(d,_) -> d

  | ArrayType(d,_,_) -> d

  | StructType(d,_) -> d

and pd_ltype_list = function 
  | LTypeList(d,_,_) -> d

and pd_lus_file = function 
  | LusFile(d,_) -> d

and pd_node_decl = function 
  | NodeDecl(d,_,_,_,_,_) -> d

and pd_one_const_decl = function 
  | EqOneConstDecl(d,_,_) -> d

  | ListOneConstDecl(d,_,_) -> d

and pd_one_decl = function 
  | ConstOneDecl(d,_) -> d

  | TypeOneDecl(d,_) -> d

  | FuncOneDecl(d,_) -> d

  | NodeOneDecl(d,_) -> d

and pd_one_type_decl = function 
  | EqOneTypeDecl(d,_,_) -> d

  | ListOneTypeDecl(d,_) -> d

and pd_program = function 
  | Program(d,_,_) -> d

and pd_sel_sub = function 
  | SelSub(d,_) -> d

and pd_sel_subsub = function 
  | SelSubSub(d,_) -> d

and pd_selector = function 
  | Selector(d,_,_) -> d

and pd_struct_filter = function 
  | StructFilter(d,_) -> d

and pd_tab_access = function 
  | TabAccess(d,_,_) -> d

  | MultiTabAccess(d,_,_) -> d

and pd_type_decl = function 
  | TypeDecl(d,_) -> d

and pd_type_list = function 
  | TypeList(d,_,_) -> d

and pd_var_decl = function 
  | VarDecl(d,_,_) -> d

and pd_var_decl_list = function 
  | VarDeclList(d,_,_) -> d

and pd_vardecllist_var_decl_list_semicolon101 = function 
  | (d,[]) -> d

  | (d,( _ )::f1239o2) -> d

and pd_typelist_type_list_comma98 = function 
  | (d,[]) -> d

  | (d,( _ )::f1239o2) -> d

and pd_typedecl_type_decl_one_type_decl96 = function 
  | (d,[]) -> d

  | (d,( _ )::f1239o2) -> d

and pd_selsubsub_sel_subsub_step90 = function 
  | (d,Some( _ )) -> d

  | (d,None) -> d

and pd_selsub_sel_sub_dotdot88 = function 
  | (d,Some( _,_ )) -> d

  | (d,None) -> d

and pd_nodedecl_node_decl_local_decl77 = function 
  | (d,Some( _ )) -> d

  | (d,None) -> d

and pd_lusfile_lus_file_one_decl75 = function 
  | (d,_,_,_,_) -> d

and pd_ltypelist_ltype_list_comma73 = function 
  | (d,[]) -> d

  | (d,( _ )::f1239o2) -> d

and pd_localdecl_local_decl_clocked_var_decl68 = function 
  | (d,[]) -> d

  | (d,( _ )::f1239o2) -> d

and pd_leftelemlist_left_elem_list_comma63 = function 
  | (d,[]) -> d

  | (d,( _ )::f1239o2) -> d

and pd_includelist_include_list_linclude58 = function 
  | (d,[]) -> d

  | (d,( _ )::f1239o2) -> d

and pd_inparamlist_in_param_list_semicolon56 = function 
  | (d,[]) -> d

  | (d,( _ )::f1239o2) -> d

and pd_varlist_id_list_comma52 = function 
  | (d,[]) -> d

  | (d,( _ )::f1239o2) -> d

and pd_explist_exp_list_comma49 = function 
  | (d,[]) -> d

  | (d,( _ )::f1239o2) -> d

and pd_equationlist_equation_list_equation13 = function 
  | (d,[]) -> d

  | (d,( _ )::f1239o2) -> d

and pd_equation2_equation_exp11 = function 
  | (d,Some( _ )) -> d

  | (d,None) -> d

and pd_constdecl_const_decl_one_const_decl7 = function 
  | (d,[]) -> d

  | (d,( _ )::f1239o2) -> d

;;
let pd e = pd_program e;;
